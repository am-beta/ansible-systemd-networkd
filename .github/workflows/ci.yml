name: CI checks

on:
  push:
    branches:
    - main
  pull_request:
    types:
    - opened
    - reopened
    - synchronize
    branches:
    - main
  schedule:
    - cron: "35 4 * * 6"

jobs:
  preflight:
    runs-on: ubuntu-22.04
    outputs:
      image_base: ${{ steps.details.outputs.image_base }}
      image_tag: ${{ steps.preflight.outputs.image_tag }}
      versions: ${{ steps.get_versions.outputs.versions }}
    steps:
    - uses: actions/checkout@v3
    - id: get_versions
      run: cat workflow-support/versions.json >> $GITHUB_OUTPUT
    - id: details
      uses: kpfleming/composite-actions/image-details@v2
      with:
        base_image: python:bullseye-main
    - id: preflight
      uses: kpfleming/composite-actions/ci-preflight@v2
      with:
        files_hash: ${{ hashfiles('tox.ini', 'workflow-support/make_ci_image.sh', '.github/workflows/ci.yml') }}
        base_image_hash: ${{ steps.details.outputs.base_image_hash }}
    - id: make-ci-image
      uses: kpfleming/composite-actions/make-ci-image@v2
      if: steps.preflight.outputs.need_image == 'true'
      with:
        base_image: ${{ steps.details.outputs.base_image }}
        image_name: ${{ steps.details.outputs.image_base }}:${{ steps.preflight.outputs.image_tag }}
        image_registry: ${{ steps.details.outputs.image_registry }}
        registry_username: ${{ secrets.QUAY_BOT_NAME }}
        registry_password: ${{ secrets.QUAY_BOT_PASSWORD }}
  ci:
    runs-on: ubuntu-22.04
    needs:
    - preflight
    strategy:
      matrix:
        python: ${{ fromJSON(needs.preflight.outputs.versions).python }}
      fail-fast: false
    container:
      image: ${{ needs.preflight.outputs.image_base }}:${{ needs.preflight.outputs.image_tag }}
    steps:
    - uses: actions/checkout@v3
    - uses: kpfleming/composite-actions/ci-tox@main
      with:
        python: ${{ matrix.python }}
