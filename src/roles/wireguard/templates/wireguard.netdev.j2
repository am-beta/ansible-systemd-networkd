{% import 'macros.j2' as macros %}

{% if "match" in wireguard -%}
{% set m=wireguard.match %}
[Match]
  {% if "system" in m -%}
{{ macros.generate_mapped_arguments(match_system_arguments, m.system) }}
  {% endif %}
{% endif %}

[NetDev]
Name={{ wireguard.name }}
Kind=wireguard
{% if "netdev" in wireguard -%}
{{ macros.generate_mapped_arguments(netdev_arguments, wireguard.netdev) }}
{% endif %}

{% if "wireguard" in wireguard -%}
[WireGuard]
{{ macros.generate_mapped_arguments(wireguard_arguments, wireguard.wireguard) }}
{% endif %}

{% for v in wireguard.peers -%}
[WireGuardPeer]
{% if "name" in v %}
# {{ v.name }}
{% endif %}
{{ macros.generate_mapped_arguments(wireguard_peer_arguments, dict(v.items() | rejectattr(0, 'eq', 'name') | list)) }}
{% endfor %}
