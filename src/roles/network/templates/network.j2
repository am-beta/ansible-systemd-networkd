{% if "match" in network -%}
{% set v=network.match %}
[Match]
{% for arg, setting in network_match_arguments.items() %}
{% if arg in v -%}
{{ setting }}={{ v[arg] }}
{% endif %}
{% endfor %}
{% for arg, setting in match_system_arguments.items() %}
{% if arg in v -%}
{{ setting }}={% if v["exclude_" + arg]|default(false) %}!{% endif %}{{ v[arg] }}
{% endif %}
{% endfor %}
{% for arg, setting in match_device_arguments.items() %}
{% if arg in v -%}
{{ setting }}={{ v[arg] }}
{% endif %}
{% endfor %}
{% for arg, setting in match_device_excludable_arguments.items() %}
{% if arg in v -%}
{{ setting }}={% if v["exclude_" + arg]|default(false) %}!{% endif %}{{ v[arg] }}
{% endif %}
{% endfor %}
{% if "property" in v -%}
Property={% if network.exclude_property|default(false) %}!{% endif %}{% for p in v.property %}"{{ p.name }}={{ p.value }}"{% endfor %}
{% endif %}

{% endif %}
{% if "link" in network -%}
[Link]
{% for arg, value in network.link.items() %}
{% if value is string %}
{{ network_link_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_link_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_link_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
[Network]
{% for arg, value in network.items() if (arg != 'name') and (value is not mapping) and ((value is not sequence) or (value[0] is not mapping)) %}
{% if value is string %}
{{ network_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% if "dhcpv4" in network -%}
[DHCPv4]
{% for arg, value in network.dhcpv4.items() %}
{% if value is string %}
{{ network_dhcpv4_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_dhcpv4_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_dhcpv4_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% if "dhcpv6" in network -%}
[DHCPv6]
{% for arg, value in network.dhcpv6.items() %}
{% if value is string %}
{{ network_dhcpv6_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_dhcpv6_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_dhcpv6_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% if "ipv6acceptra" in network -%}
[IPV6AcceptRA]
{% for arg, value in network.ipv6acceptra.items() %}
{% if value is string %}
{{ network_ipv6acceptra_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_ipv6acceptra_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_ipv6acceptra_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% if "addresses" in network -%}
{% for v in network.addresses -%}
[Address]
{% for arg, value in v.items() %}
{% if value is string %}
{{ network_address_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_address_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_address_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}
{% if "routes" in network -%}
{% for v in network.routes -%}
[Route]
{% for arg, value in v.items() %}
{% if value is string %}
{{ network_route_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_route_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_route_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}
