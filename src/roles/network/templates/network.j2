{% if "match" in network -%}
{% set m=network.match %}
[Match]
{% if "device" in m -%}
{% for arg, value in m.device.items() %}
{% if value is string or value is integer  %}
{{ match_device_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ match_device_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{{ match_device_arguments[arg] }}={{ value|join(' ') }}
{% endif %}
{% endfor %}
{% endif %}
{% if "system" in m -%}
{% for arg, value in m.system.items() %}
{% if value is string or value is integer  %}
{{ match_system_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ match_system_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ match_system_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}

{% endif %}
{% if "link" in network -%}
[Link]
{% for arg, value in network.link.items() %}
{% if value is string or value is integer %}
{{ network_link_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_link_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_link_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
[Network]
{% for arg, value in network.items() if arg in network_arguments.keys() %}
{% if value is string or value is integer %}
{{ network_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% if "dhcpv4" in network -%}
[DHCPv4]
{% for arg, value in network.dhcpv4.items() %}
{% if value is string or value is integer %}
{{ network_dhcpv4_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_dhcpv4_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_dhcpv4_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% if "dhcpv6" in network -%}
[DHCPv6]
{% for arg, value in network.dhcpv6.items() %}
{% if value is string or value is integer %}
{{ network_dhcpv6_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_dhcpv6_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_dhcpv6_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% if "ipv6acceptra" in network -%}
[IPV6AcceptRA]
{% for arg, value in network.ipv6acceptra.items() %}
{% if value is string or value is integer %}
{{ network_ipv6acceptra_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_ipv6acceptra_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_ipv6acceptra_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endif %}
{% if "addresses" in network -%}
{% for v in network.addresses -%}
[Address]
{% for arg, value in v.items() %}
{% if value is string or value is integer %}
{{ network_address_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_address_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_address_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}
{% if "routes" in network -%}
{% for v in network.routes -%}
[Route]
{% for arg, value in v.items() %}
{% if value is string or value is integer %}
{{ network_route_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_route_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_route_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}
{% if "routing_policy_rules" in network -%}
{% for v in network.routing_policy_rules -%}
[RoutingPolicyRule]
{% for arg, value in v.items() %}
{% if value is string or value is integer %}
{{ network_routing_policy_rule_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_routing_policy_rule_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_routing_policy_rule_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}

{% endfor %}
{% endif %}
{% if "cake" in network -%}
[CAKE]
{% for arg, value in network.cake.items() %}
{% if value is string or value is integer %}
{{ network_cake_arguments[arg] }}={{ value }}
{% elif value is boolean %}
{{ network_cake_arguments[arg] }}={{ value|ternary('yes','no') }}
{% else %}
{% for v in value %}
{{ network_cake_arguments[arg] }}={{ v }}
{% endfor %}
{% endif %}
{% endfor %}
{% endif %}
